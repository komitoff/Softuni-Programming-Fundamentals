package file_interpreter;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.HashMap;
import java.util.Map;

public class MagicWords {
	public static void main(String [] args) throws IOException {
		BufferedReader reader = 
				new BufferedReader(new InputStreamReader(System.in));
		
		String[] inputWords = reader.readLine().split("\\s+");
		char[] firstWord = inputWords[0].toCharArray();
		char[] secondWord = inputWords[1].toCharArray();
		int maxLen = Math.max(firstWord.length, secondWord.length);
		int minLen = Math.min(firstWord.length, secondWord.length);
		Map<Character, Character> mappedLetters =
				new HashMap<Character, Character>();
		boolean result = true;
		if (firstWord.length >= secondWord.length) {
			for (int i = 0; i < minLen; i++) {
				if (!mappedLetters.containsKey(firstWord[i])) {
					mappedLetters.put(firstWord[i], secondWord[i]);
				}
				
				if (!mappedLetters.get(firstWord[i]).equals(secondWord[i])) {
					result = false;
				}
			}
		}
		else {
			for (int i = 0; i < minLen; i++) {
				if (!mappedLetters.containsKey(firstWord[i])) {
					mappedLetters.put(firstWord[i], secondWord[i]);
				}
				
				if (!mappedLetters.get(firstWord[i]).equals(secondWord[i])) {
					result = false;
				}
			}
			
			for (int j = minLen; j < maxLen; j++) {
				if (!mappedLetters.containsValue(secondWord[j])) {
					result = false;
				}
			}
		}
		System.out.println(result);
	}
}